plugins {
    id 'java'
    id 'application'
}

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    flatDir {
        dirs '../libs'  // Carpeta externa
        dirs 'libs'     // Carpeta local
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    
    implementation name: "multimodal-observer", version: '0.0.0'
    implementation 'com.google.code.gson:gson:2.10'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

application {
    mainClassName = 'PluginLauncher.PluginLauncher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('createPluginsFolder') {
    doLast {
        def pluginsDir = file("${buildDir}/libs/plugins")
        if (!pluginsDir.exists()) {
            pluginsDir.mkdirs()
        }
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'PluginLauncher.PluginLauncher'
        )
    }
}

task fatJar(type: Jar) {
    archiveClassifier.set('all') // Agrega el sufijo "-all" al archivo JAR generado
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
            'Main-Class': 'PluginLauncher.PluginLauncher' // Asegúrate de que el manifiesto tenga la clase principal
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } // Incluye dependencias
    }
    with jar 
}

tasks.named('build') {
    dependsOn createPluginsFolder
    finalizedBy fatJar
}
